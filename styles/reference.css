/* --- Basic Reset and Body Styling --- */
*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  line-height: 1.6;
  background-color: #f8f9fa;
  color: #343a40;
  margin: 0;
  height: 100%;
}

/* --- Header Styling --- */
header {
  text-align: center;
  margin-bottom: 3rem;
}

header h1 {
  font-size: 2.5rem;
  color: #212529;
  margin-bottom: 0.5rem;
}

header p {
  font-size: 1.1rem;
  color: #6c757d;
  max-width: 600px;
  margin: 0 auto;
}

/* --- Grid Container for the Cards --- */
.references-grid {
  /* This is the magic for the layout! */
  display: grid;
  /* Creates columns that are at least 300px wide, but will grow to fill space */
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 1.5rem; /* Space between the cards */

  /* Resetting default list styles */
  list-style-type: none;
  padding: 0;
  margin: 0;
}

/* --- Individual Card Styling --- */
.reference-card {
  background-color: #ffffff;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
  overflow: hidden; /* Ensures the border-radius is respected by children */
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.reference-card:hover {
  transform: translateY(-5px); /* Lift the card on hover */
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
}

/* --- Styling the Link that Wraps the Card --- */
.reference-card a {
  display: flex; /* Aligns image and text content */
  align-items: center; /* Vertically centers the content inside the link */
  padding: 1.5rem;
  text-decoration: none;
  color: inherit; /* Inherits the default text color from the body */
  gap: 1.5rem; /* Space between image and text block */
}

/* --- Card Image Styling (The Avatar) --- */
.card-image {
  width: 80px;
  height: 80px;
  border-radius: 50%; /* Makes the image a circle, perfect for avatars */
  object-fit: cover; /* Ensures the image covers the area without distortion */
  flex-shrink: 0; /* Prevents the image from shrinking */
}

/* --- Card Content (Title and Description) --- */
.card-content {
  flex: 1;
}

.card-title {
  margin: 0 0 0.5rem 0;
  font-size: 1.25rem;
  color: #343a40;
}

.card-description {
  margin: 0;
  font-size: 0.9rem;
  color: #6c757d;
}
/*nav bar*/
.navbar {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 80px;
  width: 100%;
  top: 0px;
  position: sticky;
  background-color: rgba(0, 0, 0, 0.3);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(10px);
  z-index: 999;
}
.navbar-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  padding: 0 2rem;
  max-width: 1600px;
}
.navbar-logo {
  font-size: 2rem;
  font-weight: 600;
  color: white;
  text-decoration: none;
  cursor: pointer;
}
.navbar-container .navbar-menu {
  display: flex;
  text-align: center;
  gap: 1.5rem;
  list-style: none;
}

.navbar-container .navbar-menu li a {
  text-decoration: none;
  color: white;
  font-size: 1.3rem;
  font-weight: 500;
  padding: 3px 20px;
  border-radius: 20px;
  border: 2px solid transparent;
  transition: all 0.7s ease;
  white-space: nowrap;
}
.navbar-container .navbar-menu li a:hover,
.navbar-container .navbar-menu li a.active {
  color: #162530;
  background: rgba(188, 212, 229, 0.8);
  border: 2px solid white;
}
.navbar-toggle {
  display: none;
  background: transparent;
  padding: 10px;
  border: none;
  cursor: pointer;
}
.bar {
  display: block;
  width: 25px;
  height: 3px;
  margin: 5px auto;
  background: white;
  transition: all 0.3s ease-in-out;
}
/*responsive style for nav 880 px*/
@media (max-width: 880px) {
  .navbar {
    backdrop-filter: none;
  }
  .navbar-container .navbar-menu {
    display: none;
    flex-direction: column;
    align-items: flex-start;
    gap: 1.7rem !important;
    position: absolute;
    height: 100vh;
    width: 250px;
    top: 0;
    right: 0;
    padding: 5rem 1.5rem;
    box-shadow: 0 10px 10px rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(10px);
  }
  .navbar-container .navbar-menu.active {
    display: flex;
  }
  .navbar-toggle {
    display: block;
    z-index: 999;
  }
  .navbar-toggle.active .bar:nth-child(2) {
    opacity: 0;
  }
  .navbar-toggle.active .bar:nth-child(1) {
    transform: translateY(8px) rotate(45deg);
  }
  .navbar-toggle.active .bar:nth-child(3) {
    transform: translateY(-8px) rotate(-45deg);
  }
}
@media (max-width: 480px) {
  .navbar-container {
    padding: 0 1rem;
  }
  .navbar-logo {
    font-size: 1.7rem;
  }
  .navbar-container .navbar-menu li a {
    font-size: 1.2rem;
    padding: 3px 15px;
  }
}
/*slider for framework*/
body {
  margin: 0;
  background-color: #e5e5e5;
}
main {
  width: min(1200px, 90vw);
  margin: auto;
}
.slider {
  width: 100%;
  height: var(--height);
  overflow: hidden;
  mask-image: linear-gradient(to right, transparent, #000 10% 90%, transparent);
}
.slider .list {
  display: flex;
  width: 100%;
  min-width: calc(var(--width) * var(--quantity));
  position: relative;
  align-items: baseline;
}
.slider .list .item {
  width: var(--width);
  height: var(--height);
  position: absolute;
  left: 100%;
  animation: autoRun 10s linear infinite;
  transition: filter 0.5s;
  animation-delay: calc(
    (10s / var(--quantity)) * (var(--position) - 1) - 10s
  ) !important;
}
.slider .list .item img {
  width: 100%;
}
@keyframes autoRun {
  from {
    left: 100%;
  }
  to {
    left: calc(var(--width) * -1);
  }
}
.slider:hover .item {
  animation-play-state: paused !important;
  filter: grayscale(1);
}
.slider .item:hover {
  filter: grayscale(0);
}
.slider[reverse="true"] .item {
  animation: reversePlay 10s linear infinite;
}
@keyframes reversePlay {
  from {
    left: calc(var(--width) * -1);
  }
  to {
    left: 100%;
  }
}
